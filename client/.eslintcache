[{"/home/kazuki/go/bin/SNS/client/src/index.tsx":"1","/home/kazuki/go/bin/SNS/client/src/reportWebVitals.ts":"2","/home/kazuki/go/bin/SNS/client/src/App.tsx":"3","/home/kazuki/go/bin/SNS/client/src/containers/Header/index.tsx":"4","/home/kazuki/go/bin/SNS/client/src/containers/Footer/index.tsx":"5","/home/kazuki/go/bin/SNS/client/src/containers/Top/index.tsx":"6","/home/kazuki/go/bin/SNS/client/src/containers/SignIn/index.tsx":"7","/home/kazuki/go/bin/SNS/client/src/containers/Wrapper/ScrollToTop.tsx":"8","/home/kazuki/go/bin/SNS/client/src/containers/Footer/DrawerItems.tsx":"9","/home/kazuki/go/bin/SNS/client/src/containers/Talk/index.tsx":"10"},{"size":501,"mtime":1610697213313,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610697213317,"results":"13","hashOfConfig":"12"},{"size":998,"mtime":1611303701745,"results":"14","hashOfConfig":"12"},{"size":1296,"mtime":1610960870512,"results":"15","hashOfConfig":"12"},{"size":930,"mtime":1610962459325,"results":"16","hashOfConfig":"12"},{"size":605,"mtime":1610697728573,"results":"17","hashOfConfig":"12"},{"size":1330,"mtime":1610961720713,"results":"18","hashOfConfig":"12"},{"size":251,"mtime":1610959733904,"results":"19","hashOfConfig":"12"},{"size":1172,"mtime":1611039068369,"results":"20","hashOfConfig":"12"},{"size":3864,"mtime":1611305625338,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cbfpfb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kazuki/go/bin/SNS/client/src/index.tsx",[],["47","48"],"/home/kazuki/go/bin/SNS/client/src/reportWebVitals.ts",[],"/home/kazuki/go/bin/SNS/client/src/App.tsx",["49"],"/home/kazuki/go/bin/SNS/client/src/containers/Header/index.tsx",["50","51"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nconst Header: React.FC = () => {\n    const classes = useStyles()\n    return (\n        <>\n            <div>\n                <AppBar position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <StyledLink to=\"/\">\n                            <GitHubIcon />チャット\n                        </StyledLink>\n                        <ButtonLink to=\"signin\">\n                            <Button className={classes.button}>\n                                SignIn\n                            </Button>\n                        </ButtonLink>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        </>\n    )\n}\n\nconst useStyles = makeStyles({\n    button: {\n      color: 'white',\n    },\n});\n\n\nconst StyledLink = styled(Link)`\n    margin: auto;\n    text-decoration: none;\n    color: white;\n`\n\nconst ButtonLink = styled(Link)`\n    text-decoration: none;\n`\n\nexport default Header","/home/kazuki/go/bin/SNS/client/src/containers/Footer/index.tsx",["52","53"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport DrawerItems from './DrawerItems'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst Footer: React.FC = () => {\n    const classes = useStyles();\n    return (\n        <>\n            <div>\n                <AppBar position=\"fixed\" color=\"secondary\" className={classes.footer}>\n                    <Toolbar>\n                        <DrawerItems/>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        </>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    footer: {\n        top: 'auto',\n        bottom: 0,\n    }\n}))\n\nconst StyledLink = styled(Link)`\n    margin: auto;\n    text-decoration: none;\n    color: white;\n`\n\nexport default Footer","/home/kazuki/go/bin/SNS/client/src/containers/Top/index.tsx",[],"/home/kazuki/go/bin/SNS/client/src/containers/SignIn/index.tsx",["54"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst SignIn: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Root>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"User\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n          />\n        </div>\n      </form>\n      <Button variant=\"contained\" color=\"secondary\">\n        サインイン\n      </Button>\n    </Root>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }),\n);\n\nconst Root = styled.div`\n  margin: auto;\n  padding-top: 80px;\n  padding-bottom: 50px;\n`\n\nconst StyledLink = styled(Link)`\n    margin: auto;\n    text-decoration: none;\n    color: white;\n`\n\nexport default SignIn","/home/kazuki/go/bin/SNS/client/src/containers/Wrapper/ScrollToTop.tsx",[],"/home/kazuki/go/bin/SNS/client/src/containers/Footer/DrawerItems.tsx",["55","56"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\n\nconst DrawerItems: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n      <>\n        <StyledLink to=\"/\">\n            <Button className={classes.button} size=\"large\">\n                MyPage\n            </Button>\n        </StyledLink>\n        <StyledLink to=\"/talk\">\n            <Button className={classes.button} size=\"large\">\n                Talk\n            </Button>\n        </StyledLink>\n        <StyledLink to=\"/\">\n            <Button className={classes.button} size=\"large\">\n                TimeLine\n            </Button>\n        </StyledLink>\n        <StyledLink to=\"/\">\n            <Button className={classes.button} size=\"large\">\n                Info\n            </Button>\n        </StyledLink>\n      </>\n    )\n}\n\nconst useStyles = makeStyles({\n    button: {\n      color: 'white',\n    },\n});\n\nconst StyledLink = styled(Link)`\n    margin: auto;\n    text-decoration: none;\n    color: white;\n`\n\nexport default DrawerItems","/home/kazuki/go/bin/SNS/client/src/containers/Talk/index.tsx",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":22},{"ruleId":"63","severity":1,"message":"68","line":5,"column":36,"nodeType":"65","messageId":"66","endLine":5,"endColumn":41},{"ruleId":"63","severity":1,"message":"69","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":33,"column":7,"nodeType":"65","messageId":"66","endLine":33,"endColumn":17},{"ruleId":"63","severity":1,"message":"70","line":54,"column":7,"nodeType":"65","messageId":"66","endLine":54,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":22},{"ruleId":"63","severity":1,"message":"68","line":5,"column":36,"nodeType":"65","messageId":"66","endLine":5,"endColumn":41},{"ruleId":"63","severity":1,"message":"71","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":15},{"ruleId":"63","severity":1,"message":"70","line":80,"column":7,"nodeType":"65","messageId":"66","endLine":80,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createStyles' is defined but never used.","'Theme' is defined but never used.","'GitHubIcon' is defined but never used.","'StyledLink' is assigned a value but never used.","'Resizer' is defined but never used.","no-global-assign","no-unsafe-negation"]