[{"/home/kazuki/go/src/SNS/client/src/index.tsx":"1","/home/kazuki/go/src/SNS/client/src/reportWebVitals.ts":"2","/home/kazuki/go/src/SNS/client/src/App.tsx":"3","/home/kazuki/go/src/SNS/client/src/containers/Wrapper/ScrollToTop.tsx":"4","/home/kazuki/go/src/SNS/client/src/containers/Footer/index.tsx":"5","/home/kazuki/go/src/SNS/client/src/containers/SignIn/index.tsx":"6","/home/kazuki/go/src/SNS/client/src/containers/Header/index.tsx":"7","/home/kazuki/go/src/SNS/client/src/containers/Room/index.tsx":"8","/home/kazuki/go/src/SNS/client/src/containers/Talk/index.tsx":"9","/home/kazuki/go/src/SNS/client/src/containers/Top/index.tsx":"10","/home/kazuki/go/src/SNS/client/src/containers/Footer/DrawerItems.tsx":"11","/home/kazuki/go/src/SNS/client/src/containers/Room/Bubble.tsx":"12","/home/kazuki/go/src/SNS/client/src/containers/Room/KeyBoard.tsx":"13","/home/kazuki/go/src/SNS/client/src/store/index.tsx":"14","/home/kazuki/go/src/SNS/client/src/store/AuthReducer.tsx":"15","/home/kazuki/go/src/SNS/client/src/store/UserReducer.tsx":"16","/home/kazuki/go/src/SNS/client/src/serviceClient/index.tsx":"17","/home/kazuki/go/src/SNS/client/src/proto/services_pb_service.js":"18","/home/kazuki/go/src/SNS/client/src/proto/messages_pb.js":"19","/home/kazuki/go/src/SNS/client/src/proto/services_pb.js":"20","/home/kazuki/go/src/SNS/client/src/proto/enums_pb.js":"21","/home/kazuki/go/src/SNS/client/src/actions/index.tsx":"22"},{"size":569,"mtime":1614568164395,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1613972059331,"results":"25","hashOfConfig":"24"},{"size":1068,"mtime":1613972059331,"results":"26","hashOfConfig":"24"},{"size":251,"mtime":1613972059331,"results":"27","hashOfConfig":"24"},{"size":701,"mtime":1613972059331,"results":"28","hashOfConfig":"24"},{"size":1858,"mtime":1614845891130,"results":"29","hashOfConfig":"24"},{"size":1276,"mtime":1613972059331,"results":"30","hashOfConfig":"24"},{"size":1551,"mtime":1613972059331,"results":"31","hashOfConfig":"24"},{"size":3802,"mtime":1613972059331,"results":"32","hashOfConfig":"24"},{"size":605,"mtime":1613972059331,"results":"33","hashOfConfig":"24"},{"size":1151,"mtime":1613972059331,"results":"34","hashOfConfig":"24"},{"size":881,"mtime":1613972059331,"results":"35","hashOfConfig":"24"},{"size":1480,"mtime":1613972059331,"results":"36","hashOfConfig":"24"},{"size":389,"mtime":1614843279750,"results":"37","hashOfConfig":"24"},{"size":1022,"mtime":1614845905065,"results":"38","hashOfConfig":"24"},{"size":890,"mtime":1614568164395,"results":"39","hashOfConfig":"24"},{"size":1005,"mtime":1614838938243,"results":"40","hashOfConfig":"24"},{"size":11309,"mtime":1614090038704,"results":"41","hashOfConfig":"24"},{"size":147007,"mtime":1614090038704,"results":"42","hashOfConfig":"24"},{"size":548,"mtime":1614090038704,"results":"43","hashOfConfig":"24"},{"size":1072,"mtime":1614090038704,"results":"44","hashOfConfig":"24"},{"size":1300,"mtime":1614845819193,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1equj8v",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kazuki/go/src/SNS/client/src/index.tsx",[],["94","95"],"/home/kazuki/go/src/SNS/client/src/reportWebVitals.ts",[],"/home/kazuki/go/src/SNS/client/src/App.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Wrapper/ScrollToTop.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Footer/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/SignIn/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Header/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Room/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Talk/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Top/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Footer/DrawerItems.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Room/Bubble.tsx",[],"/home/kazuki/go/src/SNS/client/src/containers/Room/KeyBoard.tsx",[],"/home/kazuki/go/src/SNS/client/src/store/index.tsx",[],"/home/kazuki/go/src/SNS/client/src/store/AuthReducer.tsx",[],"/home/kazuki/go/src/SNS/client/src/store/UserReducer.tsx",[],"/home/kazuki/go/src/SNS/client/src/serviceClient/index.tsx",["96"],"import React from 'react';\nimport { ServiceClient } from '../proto/services_pb_service';\nimport pb from '../proto/messages_pb';\n\n// export type ServiceClientAttached = {\n//   client: ServiceClient;\n// };\n\n\nconst client = new ServiceClient('http://localhost:80', {});\n\n// const serviceClient = <P extends {}>(WrappedComponent: React.ComponentType<P & ServiceClientAttached>) =>\n//   class MessageServiceAttached extends React.Component<P> {\n//   render() {\n//     return <WrappedComponent {...this.props} client={client} />;\n//   }\n// };\n\nexport interface iSignin {\n  handle: string,\n  pw: string\n}\n\nclass serviceClient {\n  public signinRequest = (args: iSignin) => {\n    return new Promise(resolve =>{\n      const req = new pb.SignInRequest()\n      req.setHandle(args.handle)\n      req.setPassword(args.pw)\n      client.signIn(req,  (err: any, res: any) => {\n        if (err || res === null) {\n            throw err\n        }\n        resolve(res)\n      })\n    })\n\n  }\n}\n\nexport default new serviceClient()","/home/kazuki/go/src/SNS/client/src/proto/services_pb_service.js",["97"],"// package: services\n// file: services.proto\n\nvar services_pb = require(\"./services_pb\");\nvar messages_pb = require(\"./messages_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Service = (function () {\n  function Service() {}\n  Service.serviceName = \"services.Service\";\n  return Service;\n}());\n\nService.SignIn = {\n  methodName: \"SignIn\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.SignInRequest,\n  responseType: messages_pb.SignInResponse\n};\n\nService.User = {\n  methodName: \"User\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.UserRequest,\n  responseType: messages_pb.UserResponse\n};\n\nService.CreateGroup = {\n  methodName: \"CreateGroup\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.CreateGroupRequest,\n  responseType: messages_pb.CreateGroupResponse\n};\n\nService.Followers = {\n  methodName: \"Followers\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.FollowersRequest,\n  responseType: messages_pb.FollowersResponse\n};\n\nService.GetGroups = {\n  methodName: \"GetGroups\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.GetGroupsRequest,\n  responseType: messages_pb.GetGroupsResponse\n};\n\nService.GetInvitedGroups = {\n  methodName: \"GetInvitedGroups\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.GetInvitedGroupsRequest,\n  responseType: messages_pb.GetInvitedGroupsResponse\n};\n\nService.JoinInvitedGroups = {\n  methodName: \"JoinInvitedGroups\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.JoinInvitedGroupsRequest,\n  responseType: messages_pb.JoinInvitedGroupsResponse\n};\n\nService.InviteToGroup = {\n  methodName: \"InviteToGroup\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: messages_pb.InviteToGroupRequest,\n  responseType: messages_pb.InviteToGroupResponse\n};\n\nService.Message = {\n  methodName: \"Message\",\n  service: Service,\n  requestStream: true,\n  responseStream: false,\n  requestType: messages_pb.MessageRequest,\n  responseType: messages_pb.MessageResponse\n};\n\nService.Receive = {\n  methodName: \"Receive\",\n  service: Service,\n  requestStream: false,\n  responseStream: true,\n  requestType: messages_pb.ReceivedRequest,\n  responseType: messages_pb.ReceivedResponse\n};\n\nexports.Service = Service;\n\nfunction ServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nServiceClient.prototype.signIn = function signIn(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.SignIn, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.user = function user(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.User, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.createGroup = function createGroup(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.CreateGroup, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.followers = function followers(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.Followers, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getGroups = function getGroups(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetGroups, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getInvitedGroups = function getInvitedGroups(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetInvitedGroups, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.joinInvitedGroups = function joinInvitedGroups(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.JoinInvitedGroups, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.inviteToGroup = function inviteToGroup(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.InviteToGroup, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.message = function message(metadata) {\n  var listeners = {\n    end: [],\n    status: []\n  };\n  var client = grpc.client(Service.Message, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      if (!client.started) {\n        client.start(metadata);\n      }\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.receive = function receive(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(Service.Receive, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.ServiceClient = ServiceClient;\n\n",["98","99"],"/home/kazuki/go/src/SNS/client/src/proto/messages_pb.js",[],"/home/kazuki/go/src/SNS/client/src/proto/services_pb.js",[],"/home/kazuki/go/src/SNS/client/src/proto/enums_pb.js",[],"/home/kazuki/go/src/SNS/client/src/actions/index.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":4,"column":5,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-unused-vars","'services_pb' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]